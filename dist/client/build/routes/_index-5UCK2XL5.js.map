{
  "version": 3,
  "sources": ["../../../../app/routes/_index.jsx"],
  "sourcesContent": ["import {useLoaderData} from '@remix-run/react';\nimport {json} from '@shopify/remix-oxygen';\nimport ProductGrid from '../components/productgrid';\nimport Navbar from \"~/components/navbar\"\n\n\nconst seo = ({data}) => ({\n    title: data?.collection?.title,\n    description: data?.collection?.description.substr(0, 154),\n});\nexport const handle = {\n    seo\n};\n\nexport async function loader({params, context}) {\n    const {handle} = 'Home Page';\n    const {collection} = await context.storefront.query(COLLECTION_QUERY, {\n      variables: {\n        handle: \"frontpage\",\n      },\n    });\n  \n    // Handle 404s\n    if (!collection) {\n      throw new Response(null, {status: 404});\n    }\n  \n    // json is a Remix utility for creating application/json responses\n    // https://remix.run/docs/en/v1/utils/json\n    return json({\n      collection,\n    });\n}\n\nexport function meta({data}){\n    return [\n      {title: data?.collection?.title ?? 'Collection'},\n      {description: data?.collection?.description},\n    ];\n};\n\nexport default function Index () {\n    const {collection} = useLoaderData();\n    return (\n        <div class=\"shop-home\">\n            <div class=\"shop-home-body\"> \n                <body>\n                    <h1>\n                        <img class=\"shop-logo\" src=\"https://i.imgur.com/0q0GRK3.gif\"></img>\n                    </h1>\n                    <h2 class=\"new-arrivals\">New Arrivals</h2>\n                    <ProductGrid\n                        collection={collection}\n                        url={`/collections/${collection.handle}`}\n                        class=\"shop-productgrid\"\n                    />\n                </body>\n            </div>\n        </div>\n    )\n}\n\nconst COLLECTION_QUERY = `#graphql\n  query CollectionDetails($handle: String!) {\n    collection(handle: $handle) {\n      id\n      title\n      description\n      handle\n      products(first: 3) {\n        nodes {\n          id\n          title\n          publishedAt\n          handle\n          variants(first: 1) {\n            nodes {\n              id\n              image {\n                url\n                altText\n                width\n                height\n              }\n              price {\n                amount\n                currencyCode\n              }\n              compareAtPrice {\n                amount\n                currencyCode\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n  "],
  "mappings": ";;;;;;;;;;;;;;;AAgDwB;AA1CxB,IAAM,MAAM,CAAC,EAAC,KAAI,OAAO;AAAA,EACrB,OAAO,MAAM,YAAY;AAAA,EACzB,aAAa,MAAM,YAAY,YAAY,OAAO,GAAG,GAAG;AAC5D;AACO,IAAM,SAAS;AAAA,EAClB;AACJ;AAsBO,SAAS,KAAK,EAAC,KAAI,GAAE;AACxB,SAAO;AAAA,IACL,EAAC,OAAO,MAAM,YAAY,SAAS,aAAY;AAAA,IAC/C,EAAC,aAAa,MAAM,YAAY,YAAW;AAAA,EAC7C;AACJ;AAEe,SAAR,QAA0B;AAC7B,QAAM,EAAC,WAAU,IAAI,cAAc;AACnC,SACI,mDAAC,SAAI,OAAM,aACP,6DAAC,SAAI,OAAM,kBACP,6DAAC,UACG;AAAA,uDAAC,QACG,6DAAC,SAAI,OAAM,aAAY,KAAI,qCAA3B;AAAA;AAAA;AAAA;AAAA,WAA6D,KADjE;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,mDAAC,QAAG,OAAM,gBAAe,4BAAzB;AAAA;AAAA;AAAA;AAAA,WAAqC;AAAA,IACrC;AAAA,MAAC;AAAA;AAAA,QACG;AAAA,QACA,KAAK,gBAAgB,WAAW;AAAA,QAChC,OAAM;AAAA;AAAA,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAIA;AAAA,OATJ;AAAA;AAAA;AAAA;AAAA,SAUA,KAXJ;AAAA;AAAA;AAAA;AAAA,SAYA,KAbJ;AAAA;AAAA;AAAA;AAAA,SAcA;AAER;",
  "names": []
}
